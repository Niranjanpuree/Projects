//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoCare.Product.Web.Personify.SsoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://TIMSSSSO/webservice", ConfigurationName="Personify.SsoService.serviceSoap")]
    public interface serviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerTokenIsValid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerTokenIsValidResult SSOCustomerTokenIsValid(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerTokenIsValid", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerTokenIsValidResult> SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.TIMSSCustomerIdentifierGetResult TIMSSCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierGet", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.TIMSSCustomerIdentifierGetResult> TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult TIMSSCustomerIdentifierSet(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/TIMSSCustomerIdentifierSet", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult> TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierGetResult VendorSSOCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierGet", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierGetResult> VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult VendorSSOCustomerIdentifierSet(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierSet", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult> VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerLogoutResult SSOCustomerLogout(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerLogout", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerLogoutResult> SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorTokenEncrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.VendorTokenEncryptResult VendorTokenEncrypt(string vendorUsername, string vendorPassword, string vendorBlock, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/VendorTokenEncrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorTokenEncryptResult> VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerTokenDecrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.CustomerTokenDecryptResult CustomerTokenDecrypt(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerTokenDecrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerTokenDecryptResult> CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/AuthorizeAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.AuthorizeAccessResult AuthorizeAccess(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/AuthorizeAccess", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.AuthorizeAccessResult> AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGet(string vendorUsername, string vendorPassword, string TIMSSCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGet", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByEmail(string vendorUsername, string vendorPassword, string EmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByUsername(string vendorUsername, string vendorPassword, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByCustomerToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByCustomerToken(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerGetByCustomerToken", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult SSOCustomerRegister(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegister", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult> SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName);
        
        // CODEGEN: Generating message contract since the wrapper name (SSOCustomerRegisterLogin) of message SSOCustomerRegisterLogin does not match the default value (SSOCustomerRegister1)
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegisterLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1 SSOCustomerRegister1(AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerRegisterLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1> SSOCustomerRegister1Async(AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateUserName(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmail(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePassword(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerAuthenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerAuthenticateResult SSOCustomerAuthenticate(string vendorUsername, string vendorPassword, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerAuthenticate", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerAuthenticateResult> SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSODeleteDuplicateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSODeleteDuplicateCustomerResult SSODeleteDuplicateCustomer(string vendorUsername, string vendorPassword, string DuplicateCustomerXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSODeleteDuplicateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSODeleteDuplicateCustomerResult> SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerDoesVendorCustomerExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOVendorCustomerResult SSOCustomerDoesVendorCustomerExist(string vendorUsername, string vendorPassword, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerDoesVendorCustomerExist", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOVendorCustomerResult> SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetId", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetVendorCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetVendorCustomerId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/CustomerAuthenticateAndGetVendorCustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmailByTimssID(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByTimssID", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmailByUserName(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserNameByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateUserNameByTimssID(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdateUserNameByTimssID", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByTimssID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePasswordByTimssID(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByTimssID", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePasswordByUserName(string vendorUsername, string vendorPassword, string UserName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordReset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SSOSendPasswordReset(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordReset", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordResetByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SSOSendPasswordResetByUserName(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOSendPasswordResetByUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOEnableDisableCustomerAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOEnableDisableCustomerAccount(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOEnableDisableCustomerAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerPasswordIsStrong", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SSOCustomerPasswordIsStrong(string vendorUsername, string vendorPassword, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TIMSSSSO/webservice/SSOCustomerPasswordIsStrong", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerTokenIsValidResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool validField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NewCustomerToken {
            get {
                return this.newCustomerTokenField;
            }
            set {
                this.newCustomerTokenField = value;
                this.RaisePropertyChanged("NewCustomerToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerAuthenticateAndGetCustomerIdResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string customerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOVendorCustomerResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool vendorCustomerAlreadyExistField;
        
        private string usernameField;
        
        private string emailField;
        
        private string vendorCustomerIdField;
        
        private string vendorUserNameField;
        
        private string customerIdField;
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool VendorCustomerAlreadyExist {
            get {
                return this.vendorCustomerAlreadyExistField;
            }
            set {
                this.vendorCustomerAlreadyExistField = value;
                this.RaisePropertyChanged("VendorCustomerAlreadyExist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VendorCustomerId {
            get {
                return this.vendorCustomerIdField;
            }
            set {
                this.vendorCustomerIdField = value;
                this.RaisePropertyChanged("VendorCustomerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VendorUserName {
            get {
                return this.vendorUserNameField;
            }
            set {
                this.vendorUserNameField = value;
                this.RaisePropertyChanged("VendorUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSODeleteDuplicateCustomerResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerAuthenticateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerUpdateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerRegisterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NewCustomerToken {
            get {
                return this.newCustomerTokenField;
            }
            set {
                this.newCustomerTokenField = value;
                this.RaisePropertyChanged("NewCustomerToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerGetResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool userExistsField;
        
        private string userNameField;
        
        private string emailField;
        
        private bool disableAccountFlagField;
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool UserExists {
            get {
                return this.userExistsField;
            }
            set {
                this.userExistsField = value;
                this.RaisePropertyChanged("UserExists");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DisableAccountFlag {
            get {
                return this.disableAccountFlagField;
            }
            set {
                this.disableAccountFlagField = value;
                this.RaisePropertyChanged("DisableAccountFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class AuthorizeAccessResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerTokenDecryptResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private string customerTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerToken {
            get {
                return this.customerTokenField;
            }
            set {
                this.customerTokenField = value;
                this.RaisePropertyChanged("CustomerToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorTokenEncryptResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private string vendorTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VendorToken {
            get {
                return this.vendorTokenField;
            }
            set {
                this.vendorTokenField = value;
                this.RaisePropertyChanged("VendorToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerLogoutResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierGetResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
                this.RaisePropertyChanged("CustomerIdentifier");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierSetResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
                this.RaisePropertyChanged("CustomerIdentifier");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class TIMSSCustomerIdentifierGetResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("Errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
                this.RaisePropertyChanged("CustomerIdentifier");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SSOCustomerRegisterLogin", WrapperNamespace="http://TIMSSSSO/webservice", IsWrapped=true)]
    public partial class SSOCustomerRegisterLogin {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=0)]
        public string vendorUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=1)]
        public string vendorPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=2)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=3)]
        public string newPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=4)]
        public string emailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=5)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=6)]
        public string lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=7)]
        public bool SSOCustomerTokenNeeded;
        
        public SSOCustomerRegisterLogin() {
        }
        
        public SSOCustomerRegisterLogin(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            this.vendorUsername = vendorUsername;
            this.vendorPassword = vendorPassword;
            this.userName = userName;
            this.newPassword = newPassword;
            this.emailAddress = emailAddress;
            this.firstName = firstName;
            this.lastName = lastName;
            this.SSOCustomerTokenNeeded = SSOCustomerTokenNeeded;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SSOCustomerRegisterLoginResponse", WrapperNamespace="http://TIMSSSSO/webservice", IsWrapped=true)]
    public partial class SSOCustomerRegisterLogin1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TIMSSSSO/webservice", Order=0)]
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult SSOCustomerRegisterLoginResult;
        
        public SSOCustomerRegisterLogin1() {
        }
        
        public SSOCustomerRegisterLogin1(AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult SSOCustomerRegisterLoginResult) {
            this.SSOCustomerRegisterLoginResult = SSOCustomerRegisterLoginResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface serviceSoapChannel : AutoCare.Product.Web.Personify.SsoService.serviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class serviceSoapClient : System.ServiceModel.ClientBase<AutoCare.Product.Web.Personify.SsoService.serviceSoap>, AutoCare.Product.Web.Personify.SsoService.serviceSoap {
        
        public serviceSoapClient() {
        }
        
        public serviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public serviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public serviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public serviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerTokenIsValidResult SSOCustomerTokenIsValid(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerTokenIsValid(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerTokenIsValidResult> SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerTokenIsValidAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.TIMSSCustomerIdentifierGetResult TIMSSCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.TIMSSCustomerIdentifierGet(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.TIMSSCustomerIdentifierGetResult> TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.TIMSSCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult TIMSSCustomerIdentifierSet(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier) {
            return base.Channel.TIMSSCustomerIdentifierSet(vendorUsername, vendorPassword, userName, TIMSSCustomerIdentifier);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult> TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier) {
            return base.Channel.TIMSSCustomerIdentifierSetAsync(vendorUsername, vendorPassword, userName, TIMSSCustomerIdentifier);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierGetResult VendorSSOCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.VendorSSOCustomerIdentifierGet(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierGetResult> VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.VendorSSOCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult VendorSSOCustomerIdentifierSet(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier) {
            return base.Channel.VendorSSOCustomerIdentifierSet(vendorUsername, vendorPassword, customerToken, VendorsSSOCustomerIdentifier);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorSSOCustomerIdentifierSetResult> VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier) {
            return base.Channel.VendorSSOCustomerIdentifierSetAsync(vendorUsername, vendorPassword, customerToken, VendorsSSOCustomerIdentifier);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerLogoutResult SSOCustomerLogout(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerLogout(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerLogoutResult> SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerLogoutAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.VendorTokenEncryptResult VendorTokenEncrypt(string vendorUsername, string vendorPassword, string vendorBlock, string url) {
            return base.Channel.VendorTokenEncrypt(vendorUsername, vendorPassword, vendorBlock, url);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.VendorTokenEncryptResult> VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url) {
            return base.Channel.VendorTokenEncryptAsync(vendorUsername, vendorPassword, vendorBlock, url);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.CustomerTokenDecryptResult CustomerTokenDecrypt(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken) {
            return base.Channel.CustomerTokenDecrypt(vendorUsername, vendorPassword, vendorBlock, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerTokenDecryptResult> CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken) {
            return base.Channel.CustomerTokenDecryptAsync(vendorUsername, vendorPassword, vendorBlock, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.AuthorizeAccessResult AuthorizeAccess(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri) {
            return base.Channel.AuthorizeAccess(vendorUsername, vendorPassword, theVendorUsername, theVendorPassword, webServiceUri);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.AuthorizeAccessResult> AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri) {
            return base.Channel.AuthorizeAccessAsync(vendorUsername, vendorPassword, theVendorUsername, theVendorPassword, webServiceUri);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGet(string vendorUsername, string vendorPassword, string TIMSSCustomerId) {
            return base.Channel.SSOCustomerGet(vendorUsername, vendorPassword, TIMSSCustomerId);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId) {
            return base.Channel.SSOCustomerGetAsync(vendorUsername, vendorPassword, TIMSSCustomerId);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByEmail(string vendorUsername, string vendorPassword, string EmailAddress) {
            return base.Channel.SSOCustomerGetByEmail(vendorUsername, vendorPassword, EmailAddress);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress) {
            return base.Channel.SSOCustomerGetByEmailAsync(vendorUsername, vendorPassword, EmailAddress);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByUsername(string vendorUsername, string vendorPassword, string UserName) {
            return base.Channel.SSOCustomerGetByUsername(vendorUsername, vendorPassword, UserName);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName) {
            return base.Channel.SSOCustomerGetByUsernameAsync(vendorUsername, vendorPassword, UserName);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult SSOCustomerGetByCustomerToken(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerGetByCustomerToken(vendorUsername, vendorPassword, customerToken);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerGetResult> SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken) {
            return base.Channel.SSOCustomerGetByCustomerTokenAsync(vendorUsername, vendorPassword, customerToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult SSOCustomerRegister(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName) {
            return base.Channel.SSOCustomerRegister(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult> SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName) {
            return base.Channel.SSOCustomerRegisterAsync(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1 AutoCare.Product.Web.Personify.SsoService.serviceSoap.SSOCustomerRegister1(AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin request) {
            return base.Channel.SSOCustomerRegister1(request);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterResult SSOCustomerRegister1(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin inValue = new AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin();
            inValue.vendorUsername = vendorUsername;
            inValue.vendorPassword = vendorPassword;
            inValue.userName = userName;
            inValue.newPassword = newPassword;
            inValue.emailAddress = emailAddress;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.SSOCustomerTokenNeeded = SSOCustomerTokenNeeded;
            AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1 retVal = ((AutoCare.Product.Web.Personify.SsoService.serviceSoap)(this)).SSOCustomerRegister1(inValue);
            return retVal.SSOCustomerRegisterLoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1> AutoCare.Product.Web.Personify.SsoService.serviceSoap.SSOCustomerRegister1Async(AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin request) {
            return base.Channel.SSOCustomerRegister1Async(request);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin1> SSOCustomerRegister1Async(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin inValue = new AutoCare.Product.Web.Personify.SsoService.SSOCustomerRegisterLogin();
            inValue.vendorUsername = vendorUsername;
            inValue.vendorPassword = vendorPassword;
            inValue.userName = userName;
            inValue.newPassword = newPassword;
            inValue.emailAddress = emailAddress;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.SSOCustomerTokenNeeded = SSOCustomerTokenNeeded;
            return ((AutoCare.Product.Web.Personify.SsoService.serviceSoap)(this)).SSOCustomerRegister1Async(inValue);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateUserName(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName) {
            return base.Channel.SSOCustomerUpdateUserName(vendorUsername, vendorPassword, CustomerEmailAddress, newUserName);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName) {
            return base.Channel.SSOCustomerUpdateUserNameAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newUserName);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmail(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress) {
            return base.Channel.SSOCustomerUpdateEmail(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress) {
            return base.Channel.SSOCustomerUpdateEmailAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePassword(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword) {
            return base.Channel.SSOCustomerUpdatePassword(vendorUsername, vendorPassword, CustomerEmailAddress, newPassword);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword) {
            return base.Channel.SSOCustomerUpdatePasswordAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newPassword);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerAuthenticateResult SSOCustomerAuthenticate(string vendorUsername, string vendorPassword, string userName, string password) {
            return base.Channel.SSOCustomerAuthenticate(vendorUsername, vendorPassword, userName, password);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerAuthenticateResult> SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password) {
            return base.Channel.SSOCustomerAuthenticateAsync(vendorUsername, vendorPassword, userName, password);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSODeleteDuplicateCustomerResult SSODeleteDuplicateCustomer(string vendorUsername, string vendorPassword, string DuplicateCustomerXML) {
            return base.Channel.SSODeleteDuplicateCustomer(vendorUsername, vendorPassword, DuplicateCustomerXML);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSODeleteDuplicateCustomerResult> SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML) {
            return base.Channel.SSODeleteDuplicateCustomerAsync(vendorUsername, vendorPassword, DuplicateCustomerXML);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOVendorCustomerResult SSOCustomerDoesVendorCustomerExist(string vendorUsername, string vendorPassword, string username) {
            return base.Channel.SSOCustomerDoesVendorCustomerExist(vendorUsername, vendorPassword, username);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOVendorCustomerResult> SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username) {
            return base.Channel.SSOCustomerDoesVendorCustomerExistAsync(vendorUsername, vendorPassword, username);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            return base.Channel.CustomerAuthenticateAndGetId(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            return base.Channel.CustomerAuthenticateAndGetIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetVendorCustomerId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            return base.Channel.CustomerAuthenticateAndGetVendorCustomerId(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.CustomerAuthenticateAndGetCustomerIdResult> CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            return base.Channel.CustomerAuthenticateAndGetVendorCustomerIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmailByTimssID(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId) {
            return base.Channel.SSOCustomerUpdateEmailByTimssID(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress, TimssCustomerId);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId) {
            return base.Channel.SSOCustomerUpdateEmailByTimssIDAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress, TimssCustomerId);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateEmailByUserName(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName) {
            return base.Channel.SSOCustomerUpdateEmailByUserName(vendorUsername, vendorPassword, newEmailAddress, UserName);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName) {
            return base.Channel.SSOCustomerUpdateEmailByUserNameAsync(vendorUsername, vendorPassword, newEmailAddress, UserName);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdateUserNameByTimssID(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId) {
            return base.Channel.SSOCustomerUpdateUserNameByTimssID(vendorUsername, vendorPassword, newUserName, TimssCustomerId);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId) {
            return base.Channel.SSOCustomerUpdateUserNameByTimssIDAsync(vendorUsername, vendorPassword, newUserName, TimssCustomerId);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePasswordByTimssID(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword) {
            return base.Channel.SSOCustomerUpdatePasswordByTimssID(vendorUsername, vendorPassword, TimssCustomerId, newPassword);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword) {
            return base.Channel.SSOCustomerUpdatePasswordByTimssIDAsync(vendorUsername, vendorPassword, TimssCustomerId, newPassword);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOCustomerUpdatePasswordByUserName(string vendorUsername, string vendorPassword, string UserName, string newPassword) {
            return base.Channel.SSOCustomerUpdatePasswordByUserName(vendorUsername, vendorPassword, UserName, newPassword);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword) {
            return base.Channel.SSOCustomerUpdatePasswordByUserNameAsync(vendorUsername, vendorPassword, UserName, newPassword);
        }
        
        public bool SSOSendPasswordReset(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken) {
            return base.Channel.SSOSendPasswordReset(vendorUsername, vendorPassword, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public System.Threading.Tasks.Task<bool> SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken) {
            return base.Channel.SSOSendPasswordResetAsync(vendorUsername, vendorPassword, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public bool SSOSendPasswordResetByUserName(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken) {
            return base.Channel.SSOSendPasswordResetByUserName(vendorUsername, vendorPassword, UserName, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public System.Threading.Tasks.Task<bool> SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken) {
            return base.Channel.SSOSendPasswordResetByUserNameAsync(vendorUsername, vendorPassword, UserName, emailAddress, vendorIdentifier, vendorToken);
        }
        
        public AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult SSOEnableDisableCustomerAccount(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue) {
            return base.Channel.SSOEnableDisableCustomerAccount(vendorUsername, vendorPassword, UserName, DisableFlagValue);
        }
        
        public System.Threading.Tasks.Task<AutoCare.Product.Web.Personify.SsoService.SSOCustomerUpdateResult> SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue) {
            return base.Channel.SSOEnableDisableCustomerAccountAsync(vendorUsername, vendorPassword, UserName, DisableFlagValue);
        }
        
        public string SSOCustomerPasswordIsStrong(string vendorUsername, string vendorPassword, string Password) {
            return base.Channel.SSOCustomerPasswordIsStrong(vendorUsername, vendorPassword, Password);
        }
        
        public System.Threading.Tasks.Task<string> SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password) {
            return base.Channel.SSOCustomerPasswordIsStrongAsync(vendorUsername, vendorPassword, Password);
        }
    }
}
