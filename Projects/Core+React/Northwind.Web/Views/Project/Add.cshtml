@model Northwind.Web.Models.ViewModels.Contract.ContractViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Task Order : Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var resourceVersion = @Configuration["resourceVersion"];
    var cdnUrl = @Configuration["CDNUrl"];
}
@section breadcrumb
    {
    <li class="breadcrumb-item"><a href="/Contract">List Of Contracts</a></li>
    <li class="breadcrumb-item">
        <a href="/Contract/Details/@Model.ParentContractGuid">
            @Model.BasicContractInfo.ParentProjectNumber : Contract
            Detail
        </a>
    </li>
    <li class="breadcrumb-item"><a href="#">Add Task Order</a></li>
}
<div id="dialog">
    <div class="content"></div>
</div>
<form id="projectForm" method="post" action="Add">
    @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
    <div class="text-danger validation-summary-errors"></div>

    <input type="hidden" asp-for="ParentContractGuid" />
    <input type="hidden" asp-for="PreviousProjectGuid" />
    <input type="hidden" asp-for="BasicContractInfo.ParentProjectNumber" />
    <input type="hidden" asp-for="NextProjectGuid" />
    <input type="hidden" asp-for="ProjectCounter" />
    <div class="row" id="sticky-header">
        <div class="col-md-12 text-right">
            <button type="submit" id="btnAdd" class="btn btn-primary"> Save </button>
            <button type="reset" class="btn btn-secondary" onclick="location.href='/Contract'">
                Cancel
            </button>

        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <ul id="basicProjectInformationPanel" class="ProjectPanel">
                <li class="k-state-active">
                    <span class="k-link k-state-selected">Basic Task Order Information</span>
                    <partial name="Partial/_BasicProjectInformation.cshtml" />
                </li>
            </ul>
        </div>
        <div class="col-md-6">
            <ul id="keyPersonnelPanel" class="ProjectPanel mb-3">
                <li class="k-state-active">
                    <span class="k-link k-state-selected">Key Personnel</span>
                    <partial name="Partial/_KeyPersonnelPanel.cshtml" />
                </li>
            </ul>
            <ul id="customerInformationPanel" class="ProjectPanel mb-3">
                <li class="k-state-active">
                    <span class="k-link k-state-selected">Customer Information</span>
                    <partial name="Partial/_CustomerInformationPanel.cshtml" />
                </li>
            </ul>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-12">
            <ul id="financialInfoPanel" class="ProjectPanel">
                <li class="k-state-active">
                    <span class="k-link k-state-selected">Financial Information</span>
                    <partial name="Partial/_FinancialInformation.cshtml" />
                </li>
            </ul>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-12">
            <ul id="financialInfoPanel" class="ProjectPanel">
                <li class="k-state-active">
                    <span class="k-link k-state-selected">Task Order Files</span>
                    <partial name="Partial/_ProjectFiles.cshtml" />
                </li>
            </ul>
        </div>
    </div>
</form>

@section Scripts
    {
    <script src="@cdnUrl/js/proj/project.js?v=@resourceVersion"></script>
    <script src="@cdnUrl/js/amountFormat.js?v=@resourceVersion"></script>
    <script>
        window.uploader = null;
        window.notificationLink = null;

        $(document).ready(function () {

            window.onscroll = function () {
                stickyrow()
            };

            var header = document.getElementById("sticky-header");
            var sticky = header.offsetTop + 100;

            function stickyrow() {
                if (window.pageYOffset > sticky) {
                    header.classList.add("active");
                } else {
                    header.classList.remove("active");
                }
            }

            var url = "/Project/Add";
            afterDocumentReadyValidateAndSubmit(url, false);
        });
    </script>
    <script>
    //assign in uploader variable the component because we need onSubmitFiles method from component after the contract page submit succesfully from ajax ..
    window.uploader = window.loadFileUpload.pageView.loadFileUpload('fileUpload', '@ViewBag.Resourcekey', true,
        undefined, '@ViewBag.UpdatedBy', '@ViewBag.UpdatedOn', 'N/A', false, true, false, false, false,
        submitCallBack);

    function submitCallBack() {
        // finally redirect to  notification page..

        //$('#loading').hide();  //loading will auto if redirect to other page..

        window.location.href = window.notificationLink;
    }
    </script>
}